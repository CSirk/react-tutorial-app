{"version":3,"sources":["components/Square.js","components/Board.js","components/Game.js","App.js","reportWebVitals.js","index.js"],"names":["Square","className","onClick","props","value","this","React","Component","Board","i","squares","renderSquare","lines","length","a","b","c","Game","state","history","Array","fill","xIsNext","stepNumber","slice","calculateWinner","setState","concat","step","status","current","winner","moves","map","move","desc","jumpTo","handleClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.491103e0.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Square extends React.Component {\r\n    render() {\r\n      return (\r\n        <button \r\n            className=\"square\" \r\n            onClick={() => { this.props.onClick({value: 'X'}) }}\r\n        >\r\n            {this.props.value}\r\n        </button>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default Square;","import React from 'react';\r\nimport Square from './Square';\r\n\r\nclass Board extends React.Component {\r\n    \r\n    renderSquare(i) {\r\n        return (\r\n            <Square\r\n            value={this.props.squares[i]}\r\n            onClick={() => this.props.onClick(i)}\r\n            />\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(0)}\r\n                    {this.renderSquare(1)}\r\n                    {this.renderSquare(2)}\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(3)}\r\n                    {this.renderSquare(4)}\r\n                    {this.renderSquare(5)}\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(6)}\r\n                    {this.renderSquare(7)}\r\n                    {this.renderSquare(8)}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    calculateWinner(squares) {\r\n        const lines = [\r\n          [0, 1, 2],\r\n          [3, 4, 5],\r\n          [6, 7, 8],\r\n          [0, 3, 6],\r\n          [1, 4, 7],\r\n          [2, 5, 8],\r\n          [0, 4, 8],\r\n          [2, 4, 6],\r\n        ];\r\n        for (let i = 0; i < lines.length; i++) {\r\n          const [a, b, c] = lines[i];\r\n          if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n            return squares[a];\r\n          }\r\n        }\r\n        return null;\r\n      }\r\n}\r\n\r\n    export default Board;","import React from 'react';\r\nimport Board from './Board';\r\n\r\nclass Game extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            history: [{\r\n                squares: Array(9).fill(null),\r\n            }],\r\n            xIsNext: true,\r\n            stepNumber: 0,\r\n        };\r\n    }\r\n\r\n    handleClick(i) {\r\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n        const current = history[history.length - 1];\r\n        const squares = current.squares.slice();\r\n        if (this.calculateWinner(squares) || squares[i]) {\r\n          return;\r\n        }\r\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n        this.setState({\r\n          history: history.concat([{\r\n            squares: squares,\r\n          }]),\r\n          xIsNext: !this.state.xIsNext,\r\n          stepNumber: history.length,\r\n        });\r\n    }\r\n\r\n    jumpTo(step) {\r\n        this.setState({\r\n            stepNumber: step,\r\n            xIsNext: (step % 2) === 0,\r\n        })\r\n    }\r\n\r\n    calculateWinner(squares) {\r\n        const lines = [\r\n          [0, 1, 2],\r\n          [3, 4, 5],\r\n          [6, 7, 8],\r\n          [0, 3, 6],\r\n          [1, 4, 7],\r\n          [2, 5, 8],\r\n          [0, 4, 8],\r\n          [2, 4, 6]\r\n        ];\r\n        for (let i = 0; i < lines.length; i++) {\r\n          const [a, b, c] = lines[i];\r\n          if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n            return squares[a];\r\n          }\r\n        }\r\n        return null;\r\n      }\r\n\r\n    render() {\r\n        const history = this.state.history;\r\n        const current = history[this.state.stepNumber];\r\n        const winner = this.calculateWinner(current.squares);\r\n        \r\n        const moves = history.map((step, move) => {\r\n            const desc = move ?\r\n              'Go to move #' + move :\r\n              'Go to game start';\r\n            return (\r\n              <li key={move}>\r\n                <button onClick={() => this.jumpTo(move)}>{desc}</button>\r\n              </li>\r\n            );\r\n        });\r\n        \r\n        let status;\r\n        if (winner) {\r\n            status = 'Winner: ' + winner;\r\n        } else {\r\n            status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n        }\r\n        return (\r\n            <div className=\"game\">\r\n            <div className=\"game-board\">\r\n                <Board \r\n                    squares={current.squares}\r\n                    onClick={(i) => this.handleClick(i)}\r\n                />\r\n            </div>\r\n            <div className=\"game-info\">\r\n                <div>{status}</div>\r\n                <ol>{moves}</ol>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Game;","import Game from './components/Game';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Game/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}